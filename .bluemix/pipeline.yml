---
stages:
- name: Deploy Marbles Application
  inputs:
  - type: git
    branch: v4.0
    service: ${SAMPLE_REPO}
  triggers:
  - type: commit
  properties:
  - name: SERVICE_INSTANCE_NAME
    value: '{{sin}}'
    type: text
  - name: SAMPLE_REPO
    value: '{{SAMPLE_REPO}}'
    type: text
  jobs:
  - name: deploy-marbles-app
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME}
    script: |
      #!/bin/bash

      # Test Code
      printf "\n --- Listing services for testing ---\n"
      cf services
      #cf services | sed -n 's/.*\(ibm-blockchain-plan-v1-prod\).*/\1/p'
      #cf services | sed -n 's/.*\(${SERVICE_INSTANCE_NAME}\).*/\1/p'

      # Detect if there is already a service we should use
      printf "\n --- Detecting service option---\n"
      if [ "$SERVICE_INSTANCE_NAME" != "" ]; then
        echo "A service instance name was provided, lets use that"
      else
        echo "A service instance name was NOT provided, lets use the default one"
        export SERVICE_INSTANCE_NAME="davids-d2b-test"
      fi
      printf "Using service instance name '${SERVICE_INSTANCE_NAME}'\n"

      # Create a service, this is okay to run even if the service already exists, at least as of 01/12/2018
      printf "\n --- Creating an instance of the IBM Blockchain Platform service ---\n"
      cf create-service cloudantNoSQLDB Lite ${SERVICE_INSTANCE_NAME}

      # Push app (don't start yet, wait for binding)
      printf "\n --- Creating the Marbles application ---\n"
      cf push $CF_APP --no-start

      # Bind app to the blockchain service
      printf "\n --- Binding the IBM Blockchain Platform service to Marbles ---\n"
      cf bind-service $CF_APP ${SERVICE_INSTANCE_NAME} -c "{\"permissions\":\"read-only\"}"

      # Start her up
      printf "\n --- Starting Marbles ---\n"
      cf start $CF_APP
      #cf restage $CF_APP - this is not needed if we bind before starting

      printf "\n\n --- We are done here. ---\n\n"
